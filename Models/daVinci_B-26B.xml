<?xml version="1.0" encoding="ISO-8859-1"?>

<PropertyList>

  <path>b26.ac</path>
  <sound>
    <path>Aircraft/daVinci_B-26B/Sounds/mp-sound.xml</path>
  </sound>

  <offsets>
    <z-m>0</z-m>
    <pitch-deg>0</pitch-deg>
  </offsets>

  <nasal>
    <load><![CDATA[
var livery_update = aircraft.livery_update.new("Aircraft/daVinci_B-26B/Models/liveries", 30);
var self = cmdarg();
var aliases = [];
for (var i = 0; i &lt; 6; i += 1) {
  var door = self.getNode("sim/model/bo105/doors/door[" ~ i ~ "]/position-norm", 1);
  var generic = self.getNode("sim/multiplay/generic/float[" ~ i ~ "]", 1);
  door.alias(generic);
  append(aliases, door);
}

var root = cmdarg();
var rootindex = root.getIndex();
var mpPath = "/ai/models/multiplayer["~ rootindex ~"]/";
var lightsPath = mpPath~"lightpack/"; #path to the property node, where all internal values are placed
props.globals.initNode(mpPath~"sim/is-MP-Aircraft", 1, "BOOL");
srand();

# wherever you want to add randomization of time, use something like:
# + rand() * 0.05 - 0.025 (included by default where appropriate)
# list of switches for lights - if you don't intend to use some light,
# assign it nil value instead, like whateverSwitch = nil; and you don't need to
# care about anything else
# IMPORTANT: don't put / on the start of the string, it's already included in
# the mpPath property
var navSwitch = mpPath~"controls/lighting/nav-lights-switch";
var beaconSwitch = mpPath~"controls/lighting/beacon-switch";
var strobeSwitch = mpPath~"controls/lighting/strobe-switch";
var landingSwitch = mpPath~"controls/lighting/landing-lights-switch";
var taxiSwitch = mpPath~"controls/lighting/taxi-light-switch";
var probeSwitch = mpPath~"controls/lighting/probe-light-switch";
var whiteSwitch = mpPath~"controls/lighting/white-light-switch";
var searchSwitch = mpPath~"controls/lighting/search-light-switch";
# switch this from 1 to 0 if you want to use advanced cyclical fading animation
# of the the nav lights instead of being stable on when the switch is on
navStillOn = 1;

# I need to set listener on some MP transferred properties; this doesn't seem
# to work well sometimes, so I mirror them to the original location on any change
# This also simplifies work as I can use almost the same code for MP as is
# the local Nasal. Furthermore, I can use meaningful property names in the model
# XML files instead of referencing the MP properties. 
var mpVar = {
  new: func(propIn, propOut) {
    var m = { parents: [mpVar] };
    m.propIn = propIn;
    m.propOut = propOut;
    if(propIn == nil or propOut == nil) return m;
    m.value = getprop(propIn);
    setprop(propOut, m.value);
    return m;
  },
  check: func {
    if(me.propIn==nil or me.propOut==nil) return;
    var newValue = getprop(me.propIn);
    if(newValue != me.value) {
      setprop(me.propOut, newValue);
      me.value = newValue;
      #print("value of "~me.propOut~" changed: "~newValue);
    }
  },
};
# init any property copy object needed in this array (anything you need to
# transfer over MP, but you are using the original paths in your xmls)
# also used for properties you are using a listener on, or properties which you
# maybe want to manipulate during the <unload> 
# if you're just using the pack, change the values according to the MP bindings
# in the -set.xml file
# you don't need to delete the entries if the path is nil - it gets skipped
# automatically and the MP path is just ignored
var mirrorValues = [
  mpVar.new(mpPath~"sim/multiplay/generic/int[7]", mpPath~"sim/crashed"),
  mpVar.new(mpPath~"sim/multiplay/generic/int[0]", navSwitch),
  mpVar.new(mpPath~"sim/multiplay/generic/int[1]", beaconSwitch),
  mpVar.new(mpPath~"sim/multiplay/generic/int[1]", strobeSwitch),
  mpVar.new(mpPath~"sim/multiplay/generic/int[2]", landingSwitch),
  mpVar.new(mpPath~"sim/multiplay/generic/int[3]", taxiSwitch),
  mpVar.new(mpPath~"sim/multiplay/generic/int[3]", probeSwitch),
  mpVar.new(mpPath~"sim/multiplay/generic/int[0]", whiteSwitch),
  mpVar.new(mpPath~"sim/multiplay/generic/int[8]", searchSwitch),
];
# loop at the default MP transfer frequency (10Hz)
var mirrorTimer = maketimer(0.1, func {
  foreach(var mir; mirrorValues) {
    mir.check();
  }
});
mirrorTimer.start();

#### NAV LIGHTS ####

# class for a periodic fade in/out animation - for flashing, use rather standard
# aircraft.light.new(), as in Beacon and Strobe section
var lightCycle = {
  # constructor
  new: func(propSwitch, propOut) {
    m = { parents: [lightCycle] };
    props.globals.initNode(propOut, 0, "DOUBLE");
    props.globals.initNode(propSwitch, 1, "BOOL");
    m.fadeIn = 0.4 + rand() * 0.05 - 0.025; #fade in time
    m.fadeOut = 0.4 + rand() * 0.05 - 0.025; #fade out time
    m.stayOn = 1.5 + rand() * 0.05 - 0.025; #stable on period
    m.stayOff = 1 + rand() * 0.05 - 0.025; #stable off period
    m.turnOff = 0.12; # fade out time when turned off
    m.phase = 0; #phase to be run on next timer call: 0 -> fade in, 1 -> stay on, 2 -> fade out, 3 -> stay off
    m.cycleTimer = maketimer(0.1, func {
      if(getprop(propSwitch)) {
        if(m.phase == 0) {
          interpolate(propOut, 1, m.fadeIn);
          m.phase = 1;
          m.cycleTimer.restart(m.fadeIn);
        }
        else if(m.phase == 1){
          m.phase = 2;
          m.cycleTimer.restart(m.stayOn);
        }
        else if(m.phase == 2){
          interpolate(propOut, 0, m.fadeOut);
          m.phase = 3;
          m.cycleTimer.restart(m.fadeOut);
        }
        else if(m.phase == 3){
          m.phase = 0;
          m.cycleTimer.restart(m.stayOff);
        }
      }
      else {
        interpolate(propOut, 0, m.turnOff); #kills any currently ongoing interpolation
        m.phase = 0;
      }
    });
    m.cycleTimer.singleShot = 1;
    if(propSwitch == nil) {
      m.listen = nil;
      return m;
    }
    m.listen = setlistener(propSwitch, func{m.cycleTimer.restart(0);}); #handle switch changes
    m.cycleTimer.restart(0); #start the looping
    return m;
  },
  # destructor
  del: func {
    if(me.listen!=nil) removelistener(me.listen);
    me.cycleTimer.stop();
  },
};

# By default, the switch property is initialized to 1 (only if no value is
# already assigned). Don't change the class implementation! To override this,
# set the property manually. You don't need to care if any other code already
# does it for you. 
var navLights = nil;
if(!navStillOn) {
  navLights = lightCycle.new(navSwitch, lightsPath~"nav-lights-intensity");
  ### Uncomment and tune those to customize times ###
  #navLights.fadeIn = 0.4; #fade in time 
  #navLights.fadeOut = 0.4; #fade out time
  #navLights.stayOn = 3 + rand() * 0.05 - 0.025; #stable on period
  #navLights.stayOff = 0.6; #stable off period
  #navLights.turnOff = 0.12; #fade out time when turned off
}

### BEACON ###
var beacon = nil;
if(beaconSwitch != nil) {
  props.globals.initNode(beaconSwitch, 1, "BOOL");
  beacon = aircraft.light.new(lightsPath~"beacon-state", [0.0, 1.0 + rand() * 0.05 - 0.025], beaconSwitch);
}

### STROBE ###
var strobe = nil;
if(strobeSwitch != nil) {
  props.globals.initNode(strobeSwitch, 1, "BOOL");
  strobe = aircraft.light.new(lightsPath~"strobe-state", [0.0, 0.87 + rand() * 0.05 - 0.025], strobeSwitch);
}

### LIGHT FADING ###

# class for controlling fade in/out behavior - propIn is a control property 
# (handled as a boolean) and propOut is interpolated
# all light brightness animations in xmls depend on propOut (Rembrandt
# brightness, material emission, flares transparency, ...)
var lightFadeInOut = {
  # constructor
  new: func(propSwitch, propOut) {
    m = { parents: [lightFadeInOut] };
    m.fadeIn = 0.3; #some sane defaults
    m.fadeOut = 0.4;
    if(propSwitch == nil) {
      m.listen = nil;
      return m;
    }
    props.globals.initNode(propSwitch, 1, "BOOL");
    m.isOn = getprop(propSwitch);
    props.globals.initNode(propOut, m.isOn, "DOUBLE");
    m.listen = setlistener(propSwitch, 
      func {
        if(m.isOn and !getprop(propSwitch)) {
          interpolate(propOut, 0, m.fadeOut);
          m.isOn = 0;
        }
        if(!m.isOn and getprop(propSwitch)) {
          interpolate(propOut, 1, m.fadeIn);
          m.isOn = 1;
        }
      }
    );
    return m;
  },
  # destructor
  del: func {
    if(me.listen != nil) removelistener(me.listen);
  },
};

fadeLanding = lightFadeInOut.new(landingSwitch, lightsPath~"landing-lights-intensity");
fadeLanding = lightFadeInOut.new(searchSwitch, lightsPath~"search-lights-intensity");
fadeTaxi = lightFadeInOut.new(taxiSwitch, lightsPath~"taxi-light-intensity");
fadeProbe = lightFadeInOut.new(probeSwitch, lightsPath~"probe-light-intensity");
fadeWhite = lightFadeInOut.new(whiteSwitch, lightsPath~"white-light-intensity");
if(navStillOn) {
  navLights = lightFadeInOut.new(navSwitch, lightsPath~"nav-lights-intensity");
  navLights.fadeIn = 0.1;
  navLights.fadeOut = 0.12;
}
#manipulate times if defaults don't fit your needs:
#fadeLanding.fadeIn = 0.5;
#fadeLanding.fadeOut = 0.8;
### the rest of your model load embedded Nasal code ###
    ]]></load>
    <unload><![CDATA[
# prevent multiple timers and listeners from running and fighting on next connect
# cleanly destroy MP property mirroring
mirrorTimer.stop();
mirrorTimer = nil;
mirrorValues = nil;

# cleanly destroy nav lights
if(navStillOn) {
  navLights.del();
}
else {
  if(navSwitch!=nil) setprop(navSwitch, 0);
  navLights.del();
  if(navSwitch != nil) navLights.cycleTimer = nil;
  navLights = nil;
}

# cleanly destroy beacon
if(beaconSwitch!=nil) setprop(beaconSwitch, 0);
beacon.del();
beacon = nil;

#cleanly destroy strobe
if(strobeSwitch!=nil) setprop(strobeSwitch, 0);
strobe.del();
strobe = nil;

#cleanly destroy light fade in/out animation objects
fadeLanding.del();
fadeTaxi.del();
fadeProbe.del();
fadeWhite.del();

### the rest of your model unload embedded Nasal code ###
livery_update.stop();

    ]]></unload>
  </nasal>

<!-- Transparent Surfaces for Rembrandt rendering -->
  <effect>
    <inherits-from>Aircraft/daVinci_B-26B/Models/Effects/bk117reflectglas-uber</inherits-from>
    <object-name>Glass</object-name>
    <object-name>Starglass</object-name>
    <object-name>lamp</object-name>
    <object-name>light_tran</object-name>
    <object-name>nav_lights</object-name>
    <object-name>nav_light1</object-name>
  </effect>

<!-- Removes reflective glass on internal views  -->
  <animation>
    <type>select</type>
    <object-name>Glass</object-name>
    <object-name>Starglass</object-name>
    <object-name>lamp</object-name>
    <object-name>light_tran</object-name>
    <object-name>nav_lights</object-name>
    <object-name>nav_light1</object-name>
    <condition>
      <not>
        <property>sim/current-view/internal</property>
      </not>
    </condition>
  </animation>
<!--
________________________________________________________________________________
                                                                LIVERY SELECTION
  -->
<!-- livery selection : FrontFuselage -->
  <animation>
    <type>material</type>
    <object-name>NoseFuselage</object-name>
    <object-name>PortNoseGearDoor</object-name>
    <object-name>StarNoseGearDoor</object-name>
    <object-name>PortUpperBayDoorOutside</object-name>
    <object-name>PortLowerBayDoorOutside</object-name>
    <object-name>StarUpperBayDoorOutside</object-name>
    <object-name>StarLowerBayDoorOutside</object-name>
    <object-name>PortOutsideWindowFrame</object-name>
    <object-name>StarOutsideWindowFrame</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>FrontFuselage</texture-prop>
    <texture>fusefront_t.png</texture>
  </animation>
<!-- livery selection : RearFuselage -->
  <animation>
    <type>material</type>
    <object-name>RearFusleageAssy</object-name>
    <object-name>Rudder</object-name>
    <object-name>Rudder.001</object-name>
    <object-name>StarBayDoor</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>RearFuselage</texture-prop>
    <texture>fuserear_t.png</texture>
  </animation>
<!-- livery selection : PortWing -->
  <animation>
    <type>material</type>
    <object-name>PortWingAssy</object-name>
    <object-name>PortAileron</object-name>
    <object-name>PortOutsideFlap</object-name>
    <object-name>PortInsideFlap</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>PortWing</texture-prop>
    <texture>wingleft_t.png</texture>
  </animation>
<!-- livery selection : StarWing -->
  <animation>
    <type>material</type>
    <object-name>StarWingAssy</object-name>
    <object-name>StarAileron</object-name>
    <object-name>StarOutsideFlap</object-name>
    <object-name>StarInsideFlap</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>StarWing</texture-prop>
    <texture>wingright_t.png</texture>
  </animation>
<!-- livery selection : PortNacelle -->
  <animation>
    <type>material</type>
    <object-name>PortNacelle</object-name>
    <object-name>PortSpinner</object-name>
    <object-name>StarSpinner</object-name>
    <object-name>PortInnerGearDoorOutside</object-name>
    <object-name>PortOuterGearDoorOutside</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>PortNacelle</texture-prop>
    <texture>eng0_t.png</texture>
  </animation>
<!-- livery selection : StarNacelle -->
  <animation>
    <type>material</type>
    <object-name>StarNacelle</object-name>
    <object-name>StarInnerGearDoorOutside</object-name>
    <object-name>StarOuterGearDoorOutside</object-name>
    <object-name>StarOutsideGearDoor</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>StarNacelle</texture-prop>
    <texture>eng1_t.png</texture>
  </animation>
<!-- livery selection : Stabs -->
  <animation>
    <type>material</type>
    <object-name>HorizStabsAssy</object-name>
    <object-name>PortElevator</object-name>
    <object-name>PortElevator.001</object-name>
    <object-name>StarElevator</object-name>
    <object-name>StarElevator.001</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>Stabs</texture-prop>
    <texture>htails_t</texture>
  </animation>

<!-- Instruments -->
  <model>
    <path>Aircraft/daVinci_B-26B/Models/panel.xml</path>
    <offsets>
      <x-m>2.310</x-m>
      <y-m>-0.340</y-m>
      <z-m>0.700</z-m>
    </offsets>
  </model>

<!--
________________________________________________________________________________
                                                                TARGET POSITIONS

diameter = 2m,
center : has to be the coords for view n=0
@see functions.nas
  -->
  <model>
    <name>target_positions</name>
    <path>Aircraft/daVinci_B-26B/instruments/target_positions/target_positions-model.xml</path>
    <offsets>
      <x-m>.46</x-m>
      <y-m>0</y-m>
      <z-m>.29</z-m>
    </offsets>
  </model>
  <animation>
    <type>rotate</type> <!-- left/right -->
    <object-name>target_positions</object-name>
    <property>/instrumentation/my_aircraft/target_positions/view/heading-offset-deg</property>
    <center>
      <x-m>.86</x-m>
      <y-m>0</y-m>
      <z-m>.29</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type> <!-- up/down -->
    <object-name>target_positions</object-name>
    <property>/instrumentation/my_aircraft/target_positions/view/pitch-offset-deg</property>
    <center>
      <x-m>.86</x-m>
      <y-m>0</y-m>
      <z-m>.29</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>1</y>
      <z>0</z>
    </axis>
  </animation>

<!--
________________________________________________________________________________
                                                                DOORS ANIMATIONS
  -->
<!-- Windows -->
  <animation>
    <type>translate</type>
    <object-name>PortOutsideWindowFrame</object-name>
    <object-name>PortInsideWindowFrame</object-name>
    <object-name>PortWindowGlass</object-name>
    <object-name>StarOutsideWindowFrame</object-name>
    <object-name>StarInsideWindowFrame</object-name>
    <object-name>StarWindowGlass</object-name>
    <property>sim/multiplay/generic/float[0]</property>
    <factor>0.510</factor>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>PortFloorAccessDoor</object-name>
    <property>sim/multiplay/generic/float[0]</property>
    <factor>-90</factor>
    <center>
      <x-m>3.521</x-m>
      <y-m>-0.232</y-m>
      <z-m>-0.219</z-m>
    </center>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarFloorAccessDoor</object-name>
    <property>sim/multiplay/generic/float[0]</property>
    <factor>90</factor>
    <center>
      <x-m>3.521</x-m>
      <y-m>0.232</y-m>
      <z-m>-0.219</z-m>
    </center>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>

<!-- Port Upper Bay Door -->
  <animation>
    <type>rotate</type>
    <object-name>PortUpperBayDoorOutside</object-name>
    <object-name>PortUpperBayDoorInside</object-name>
    <object-name>PortLowerBayDoorOutside</object-name>
    <object-name>PortLowerBayDoorInside</object-name>
    <property>sim/multiplay/generic/float[1]</property>
    <!--property>/_debug/float</property-->
    <factor>-135</factor>
    <center> 
      <x-m>7.407</x-m>
      <y-m>-1.0</y-m>
      <z-m>-0.349</z-m>
    </center>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>PortLowerBayDoorOutside</object-name>
    <object-name>PortLowerBayDoorInside</object-name>
    <property>sim/multiplay/generic/float[1]</property>
    <!--property>/_debug/float</property-->
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>0.25</ind><dep>40</dep></entry>
      <entry><ind>0.5</ind><dep>72</dep></entry>
      <entry><ind>0.75</ind><dep>97</dep></entry>
      <entry><ind>1</ind><dep>112</dep></entry>
    </interpolation>
    <center> 
      <x-m>7.407</x-m>
      <y-m>-0.697</y-m>
      <z-m>-0.826</z-m>
    </center>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>MidFuselage.002</object-name>
    <property>sim/multiplay/generic/float[1]</property>
    <!--property>/_debug/float</property-->
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>0.25</ind><dep>20</dep></entry>
      <entry><ind>0.5</ind><dep>41</dep></entry>
      <entry><ind>0.75</ind><dep>60</dep></entry>
      <entry><ind>1</ind><dep>75</dep></entry>
    </interpolation>
    <center> 
      <x-m>0</x-m>
      <y-m>-0.3768</y-m>
      <z-m>-0.1661</z-m>
    </center>
    <axis>
      <x>-1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>

<!-- Star Upper Bay Door -->
  <animation>
    <type>rotate</type>
    <object-name>StarUpperBayDoorOutside</object-name>
    <object-name>StarUpperBayDoorInside</object-name>
    <object-name>StarLowerBayDoorOutside</object-name>
    <object-name>StarLowerBayDoorInside</object-name>
    <property>sim/multiplay/generic/float[1]</property>
    <!--property>/_debug/float</property-->
    <factor>135</factor>
    <center> 
      <x-m>7.407</x-m>
      <y-m>1.0</y-m>
      <z-m>-0.349</z-m>
    </center>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarLowerBayDoorOutside</object-name>
    <object-name>StarLowerBayDoorInside</object-name>
    <property>sim/multiplay/generic/float[1]</property>
    <!--property>/_debug/float</property-->
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>0.25</ind><dep>40</dep></entry>
      <entry><ind>0.5</ind><dep>72</dep></entry>
      <entry><ind>0.75</ind><dep>97</dep></entry>
      <entry><ind>1</ind><dep>112</dep></entry>
    </interpolation>
    <center> 
      <x-m>7.407</x-m>
      <y-m>0.697</y-m>
      <z-m>-0.826</z-m>
    </center>
    <axis>
      <x>-1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>MidFuselage.001</object-name>
    <property>sim/multiplay/generic/float[1]</property>
    <!--property>/_debug/float</property-->
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>0.25</ind><dep>20</dep></entry>
      <entry><ind>0.5</ind><dep>41</dep></entry>
      <entry><ind>0.75</ind><dep>60</dep></entry>
      <entry><ind>1</ind><dep>75</dep></entry>
    </interpolation>
    <center> 
      <x-m>0</x-m>
      <y-m>0.3768</y-m>
      <z-m>-0.1661</z-m>
    </center>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>

<!--
________________________________________________________________________________
                                                                         EFFECTS
  -->
<!-- Smoke -->
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/exhaustsmoke.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>-4.179</y-m>
      <z-m>-0.194</z-m>
    </offsets>
  </model>
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/exhaustsmoke.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>-2.476</y-m>
      <z-m>-0.194</z-m>
    </offsets>
  </model>
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/exhaustsmoke.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>4.179</y-m>
      <z-m>-0.194</z-m>
    </offsets>
  </model>
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/exhaustsmoke.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>2.476</y-m>
      <z-m>-0.194</z-m>
    </offsets>
  </model>

<!-- Contrails -->
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/contrail.xml</path>
    <offsets>
      <x-m>11.586</x-m>
      <y-m> 3.360</y-m>
      <z-m>-0.200</z-m>
    </offsets>
  </model>
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/contrail.xml</path>
    <offsets>
      <x-m>11.586</x-m>
      <y-m> -3.360</y-m>
      <z-m>-0.200</z-m>
    </offsets>
  </model>

<!-- Cranking effects -->
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/cranking/cranking.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>-4.179</y-m>
      <z-m>-0.194</z-m>
      <pitch-deg>  35 </pitch-deg>
      <heading-deg> -10 </heading-deg>
    </offsets>
  </model>
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/cranking/cranking.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>-2.476</y-m>
      <z-m>-0.194</z-m>
      <pitch-deg>  35 </pitch-deg>
      <heading-deg> -10 </heading-deg>
    </offsets>
  </model>
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/cranking/cranking.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>4.179</y-m>
      <z-m>-0.194</z-m>
      <pitch-deg>  35 </pitch-deg>
      <heading-deg> -10 </heading-deg>
    </offsets>
  </model>
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Effects/cranking/cranking.xml</path>
    <offsets>
      <x-m>6.129</x-m>
      <y-m>2.476</y-m>
      <z-m>-0.194</z-m>
      <pitch-deg>  35 </pitch-deg>
      <heading-deg> -10 </heading-deg>
    </offsets>
  </model>

<!--
________________________________________________________________________________
                                                                      PROPELLERS
  -->
<!-- left Propeller -->
  <animation>
    <type>select</type>
    <object-name>PortProp</object-name>
    <object-name>PortPropHub</object-name>
    <condition>
      <less-than>
        <property>engines/engine[1]/rpm</property>
        <value>1000</value>
      </less-than>
    </condition>
  </animation>
  <animation>
    <type>spin</type>
    <object-name>PortProp</object-name>
    <object-name>PortPropHub</object-name>
    <property>engines/engine[1]/rpm</property>
    <factor>-0.5</factor>
    <center>
      <x-m>3.553</x-m>
      <y-m>-3.320</y-m>
      <z-m>0.135</z-m>
    </center>
    <axis>
      <x>1.0</x>
      <y>0.0</y>
      <z>0.0</z>
    </axis>
  </animation>
  <animation>
    <type>blend</type>
    <object-name>PortProp</object-name>
    <object-name>PortPropHub</object-name>
    <property>engines/engine[1]/rpm</property>
    <factor>0.0002</factor>
    <max>0.7</max>
    <min>0</min>
  </animation>
  <animation>
    <type>material</type>
    <object-name>PortProp</object-name>
    <object-name>PortPropHub</object-name>
    <transparency>
      <property>engines/engine[1]/rpm</property>
      <factor>-0.0005</factor>
      <offset>1</offset>
    </transparency>
  </animation>
  <model>
    <name>pdisk</name>
    <nopreview/>
    <path>Aircraft/daVinci_B-26B/Models/pdisk.xml</path>
    <offsets>
      <x-m>3.553</x-m>
      <y-m>-3.320</y-m>
      <z-m>0.135</z-m>
    </offsets>
  </model>

<!-- right Propeller -->
  <animation>
    <type>select</type>
    <object-name>StarProp</object-name>
    <object-name>StarPropHub</object-name>
    <condition>
      <less-than>
        <property>engines/engine[0]/rpm</property>
        <value>1000</value>
      </less-than>
    </condition>
  </animation>
  <animation>
    <type>spin</type>
    <object-name>StarProp</object-name>
    <object-name>StarPropHub</object-name>
    <property>engines/engine[0]/rpm</property>
    <factor>0.5</factor>
    <center>
      <x-m>3.553</x-m>
      <y-m>3.320</y-m>
      <z-m>0.135</z-m>
    </center>
    <axis>
      <x>1.0</x>
      <y>0.0</y>
      <z>0.0</z>
    </axis>
  </animation>
  <animation>
    <type>material</type>
    <object-name>StarProp</object-name>
    <object-name>StarPropHub</object-name>
    <transparency>
      <property>engines/engine[0]/rpm</property>
      <factor>-0.0005</factor>
      <offset>1</offset>
    </transparency>
  </animation>
  <model>
    <name>pdisk</name>
    <nopreview/>
    <path>Aircraft/daVinci_B-26B/Models/pdisk.xml</path>
    <offsets>
      <x-m>3.553</x-m>
      <y-m>3.320</y-m>
      <z-m>0.135</z-m>
    </offsets>
  </model>

<!--
________________________________________________________________________________
                                                                           WINGS
  -->
<!-- Flap animations -->
  <animation>
    <type>rotate</type>
    <object-name>PortOutsideFlap</object-name>
    <property>surface-positions/flap-pos-norm</property>
    <factor>-30</factor>
    <axis>
      <x1-m>8.572</x1-m>
      <y1-m>-3.991</y1-m>
      <z1-m>0.742</z1-m>
      <x2-m>8.277</x2-m>
      <y2-m>-6.574</y2-m>
      <z2-m>0.868</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>PortInsideFlap</object-name>
    <property>surface-positions/flap-pos-norm</property>
    <factor>-30</factor>
    <axis>
      <x1-m>8.821</x1-m>
      <y1-m>-1.199</y1-m>
      <z1-m>0.569</z1-m>
      <x2-m>8.681</x2-m>
      <y2-m>-2.636</y2-m>
      <z2-m>0.674</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarOutsideFlap</object-name>
    <property>surface-positions/flap-pos-norm</property>
    <factor>30</factor>
    <axis>
      <x1-m>8.572</x1-m>
      <y1-m>3.991</y1-m>
      <z1-m>0.742</z1-m>
      <x2-m>8.277</x2-m>
      <y2-m>6.574</y2-m>
      <z2-m>0.868</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarInsideFlap</object-name>
    <property>surface-positions/flap-pos-norm</property>
    <factor>30</factor>
    <axis>
      <x1-m>8.821</x1-m>
      <y1-m>1.199</y1-m>
      <z1-m>0.569</z1-m>
      <x2-m>8.681</x2-m>
      <y2-m>2.636</y2-m>
      <z2-m>0.674</z2-m>
    </axis>
  </animation>

<!-- Aileron animations -->
  <animation>
    <type>rotate</type>
    <object-name>PortAileron</object-name>
    <property>sim/multiplay/generic/float[13]</property>
    <factor> 25 </factor>
    <axis>
      <x1-m>8.177</x1-m>
      <y1-m>-6.621</y1-m>
      <z1-m>0.776</z1-m>
      <x2-m>7.858</x2-m>
      <y2-m>-10.231</y2-m>
      <z2-m>0.945</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarAileron</object-name>
    <property>sim/multiplay/generic/float[13]</property>
    <factor>25 </factor>
    <axis>
      <x1-m>8.177</x1-m>
      <y1-m>6.621</y1-m>
      <z1-m>0.776</z1-m>
      <x2-m>7.858</x2-m>
      <y2-m>10.231</y2-m>
      <z2-m>0.945</z2-m>
    </axis>
  </animation>

<!-- Elevator Animations -->
  <animation>
    <type>rotate</type>
    <object-name>PortElevator</object-name>
    <object-name>PortElevator.001</object-name>
    <property>surface-positions/elevator-pos-norm</property>
    <factor>-25</factor>
    <center>
      <x-m>15.587</x-m>
      <y-m>-2.133</y-m>
      <z-m>1.128</z-m>
    </center>
    <axis>
      <x1-m>15.472</x1-m>
      <y1-m>-0.561</y1-m>
      <z1-m>0.936</z1-m>
      <x2-m>15.681</x2-m>
      <y2-m>-3.689</y2-m>
      <z2-m>1.344</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarElevator</object-name>
    <object-name>StarElevator.001</object-name>
    <property>surface-positions/elevator-pos-norm</property>
    <factor>25</factor>
    <center>
      <x-m>15.570</x-m>
      <y-m>2.133</y-m>
      <z-m>1.123</z-m>
    </center>
    <axis>
      <x1-m>15.472</x1-m>
      <y1-m>0.561</y1-m>
      <z1-m>0.936</z1-m>
      <x2-m>15.681</x2-m>
      <y2-m>3.689</y2-m>
      <z2-m>1.344</z2-m>
    </axis>
  </animation>

<!-- Rudder Animations -->
  <animation>
    <type>rotate</type>
    <object-name>Rudder</object-name>
    <object-name>Rudder.001</object-name>
    <property>surface-positions/rudder-pos-norm</property>
    <factor>20</factor>
    <center>
      <x-m>14.952</x-m>
      <y-m>0</y-m>
      <z-m>2.548 </z-m>
    </center>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>-1</z>
    </axis>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>NoseLowerStrut</object-name>
    <object-name>NoseLowerStrut.001</object-name>
    <object-name>NoseUpperSpringMount</object-name>
    <object-name>NoseUpperSpring2</object-name>
    <object-name>NoseLowerSpring2</object-name>
    <object-name>NoseWheel</object-name>
    <property>sim/multiplay/generic/float[16]</property>
    <offset-deg>0</offset-deg>
    <factor>-1.2</factor>
    <center>
      <x-m>1.922</x-m>
      <y-m>0</y-m>
      <z-m>-0.427</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>


<!--
________________________________________________________________________________
                                                        RETRACT GEARS ANIMATIONS
  -->
<!-- Gear Animations -->
  <!-- on cache certaines parties retractees -->
  <animation>
    <type>select</type>
    <object-name>PortWheel</object-name>
    <condition>
      <greater-than>
        <property>gear/gear[2]/position-norm</property>
        <value>0.02</value>
      </greater-than>
    </condition>
  </animation>
  <animation>
    <type>select</type>
    <object-name>PortGearActuators</object-name>
    <object-name>PortGearMounts</object-name>
    <object-name>PortUpperStrut</object-name>
    <condition>
      <greater-than>
        <property>gear/gear[2]/position-norm</property>
        <value>0.800</value>
      </greater-than>
    </condition>
  </animation>

  <animation>
    <type>select</type>
    <object-name>StarWheel</object-name>
    <condition>
      <greater-than>
        <property>gear/gear[1]/position-norm</property>
        <value>0.02</value>
      </greater-than>
    </condition>
  </animation>
  <animation>
    <type>select</type>
    <object-name>StarGearActuators</object-name>
    <object-name>StarGearMounts</object-name>
    <object-name>StarUpperStrut</object-name>
    <condition>
      <greater-than>
        <property>gear/gear[1]/position-norm</property>
        <value>0.800</value>
      </greater-than>
    </condition>
  </animation>

  <!-- bascule lors de la retractation -->
  <animation>
    <type>rotate</type>
    <object-name>PortWheel</object-name>
    <object-name>PortUpperStrut</object-name>
    <object-name>PortLowerStrut</object-name>
    <object-name>PortLowerStrut.001</object-name>
    <object-name>PortGearActuators</object-name>
    <object-name>PortGearMounts</object-name>
    <object-name>PortUpperSpring</object-name>
    <object-name>PortLowerSpring</object-name>
    <property>gear/gear[2]/position-norm</property>
    <interpolation>
      <entry><ind>0</ind><dep>95</dep></entry>
      <entry><ind>1</ind><dep>0</dep></entry>
    </interpolation>
    <center>
      <x-m>8.9</x-m>
      <y-m>0</y-m>
      <z-m>-.4</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>1</y>
      <z>0</z>
    </axis>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>StarWheel</object-name>
    <object-name>StarUpperStrut</object-name>
    <object-name>StarLowerStrut</object-name>
    <object-name>StarLowerStrut.001</object-name>
    <object-name>StarGearActuators</object-name>
    <object-name>StarGearMounts</object-name>
    <object-name>StarUpperSpring</object-name>
    <object-name>StarLowerSpring</object-name>
    <property>gear/gear[1]/position-norm</property>
    <interpolation>
      <entry><ind>0</ind><dep>95</dep></entry>
      <entry><ind>1</ind><dep>0</dep></entry>
    </interpolation>
    <center>
      <x-m>8.9</x-m>
      <y-m>0</y-m>
      <z-m>-.4</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>1</y>
      <z>0</z>
    </axis>
  </animation>

<!-- Nose Gear -->
  <animation>
    <type>rotate</type>
    <object-name>NoseLowerStrut</object-name>
    <object-name>NoseLowerStrut.001</object-name>
    <object-name>NoseUpperSpringMount</object-name>
    <object-name>NoseUpperSpring2</object-name>
    <object-name>NoseLowerSpring2</object-name>
    <object-name>NoseGearMount</object-name>
    <object-name>NoseWheel</object-name>
    <object-name>NoseUpperStrut</object-name>
    <property>gear/gear[0]/position-norm</property>
    <interpolation>
      <entry><ind>0</ind><dep>97.65</dep></entry>
      <entry><ind>1</ind><dep>0</dep></entry>
    </interpolation>
    <center>
      <x-m>1.922</x-m>
      <y-m>0</y-m>
      <z-m>-0.427</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>


<!-- De-select non-visibile parts when retracted -->
  <animation>
    <type>select</type>
    <object-name>NoseWheel</object-name>
    <condition>
      <greater-than>
        <property>gear/gear[0]/position-norm</property>
        <value>0.063</value>
      </greater-than>
    </condition>
  </animation>




<!--
________________________________________________________________________________
                                                          GEARS DOORS ANIMATIONS
  -->
<!-- Nose Gear Door Animations -->
  <animation>
    <type>rotate</type>
    <object-name>PortNoseGearDoor</object-name>
    <property>gear/gear[0]/position-norm</property>
    <interpolation>
      <entry><ind>0.0</ind><dep>0.0</dep></entry>
      <entry><ind>0.08</ind><dep>-73.0</dep></entry>
      <entry><ind>0.75</ind><dep>-72.0</dep></entry>
      <entry><ind>1.0</ind><dep>-73.0</dep></entry>
    </interpolation>
    <axis>
      <x1-m>1.769</x1-m>
      <y1-m>-0.362</y1-m>
      <z1-m>-0.664</z1-m>
      <x2-m>3.894</x2-m>
      <y2-m>-0.469</y2-m>
      <z2-m>-0.874</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarNoseGearDoor</object-name>
    <property>gear/gear[0]/position-norm</property>
    <interpolation>
      <entry><ind>0.0</ind><dep>0.0</dep></entry>
      <entry><ind>0.08</ind><dep>73.0</dep></entry>
      <entry><ind>0.75</ind><dep>73.0</dep></entry>
      <entry><ind>1.0</ind><dep>72.0</dep></entry>
    </interpolation>
    <axis>
      <x1-m>1.769</x1-m>
      <y1-m>0.362</y1-m>
      <z1-m>-0.664</z1-m>
      <x2-m>3.894</x2-m>
      <y2-m>0.469</y2-m>
      <z2-m>-0.874</z2-m>
    </axis>
  </animation>

<!-- left gear Door Animations -->
  <animation>
    <type>rotate</type>
    <object-name>PortOuterGearDoorOutside</object-name>
    <object-name>PortOuterGearDoorInside</object-name>
    <property>gear/gear[2]/position-norm</property>
    <interpolation>
      <entry><ind>0.0</ind><dep>0.0</dep></entry>
      <entry><ind>0.08</ind><dep>-72.0</dep></entry>
      <entry><ind>0.75</ind><dep>-70.0</dep></entry>
      <entry><ind>1.0</ind><dep>-70.0</dep></entry>
    </interpolation>
    <axis>
      <x1-m>6.334</x1-m>
      <y1-m>-3.954</y1-m>
      <z1-m>-0.441</z1-m>
      <x2-m>8.114</x2-m>
      <y2-m>-3.778</y2-m>
      <z2-m>-0.244</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>PortInnerGearDoorOutside</object-name>
    <object-name>PortInnerGearDoorInside</object-name>
    <property>gear/gear[2]/position-norm</property>
    <interpolation>
      <entry><ind>0.0</ind><dep>0.0</dep></entry>
      <entry><ind>0.08</ind><dep>70.0</dep></entry>
      <entry><ind>0.75</ind><dep>72.0</dep></entry>
      <entry><ind>1.0</ind><dep>70.0</dep></entry>
    </interpolation>
    <axis>
      <x1-m>6.332</x1-m>
      <y1-m>-2.682</y1-m>
      <z1-m>-0.432</z1-m>
      <x2-m>8.254</x2-m>
      <y2-m>-2.854</y2-m>
      <z2-m>-0.238</z2-m>
    </axis>
  </animation>

<!-- right gear Door Animations -->
  <animation>
    <type>rotate</type>
    <object-name>StarOuterGearDoorOutside</object-name>
    <object-name>StarOuterGearDoorInside</object-name>
    <property>gear/gear[1]/position-norm</property>
    <interpolation>
      <entry><ind>0.0</ind><dep>0.0</dep></entry>
      <entry><ind>0.08</ind><dep>70.0</dep></entry>
      <entry><ind>0.75</ind><dep>70.0</dep></entry>
      <entry><ind>1.0</ind><dep>72.0</dep></entry>
    </interpolation>
    <axis>
      <x1-m>6.334</x1-m>
      <y1-m>3.954</y1-m>
      <z1-m>-0.441</z1-m>
      <x2-m>8.114</x2-m>
      <y2-m>3.778</y2-m>
      <z2-m>-0.244</z2-m>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarInnerGearDoorOutside</object-name>
    <object-name>StarInnerGearDoorInside</object-name>
    <property>gear/gear[1]/position-norm</property>
    <interpolation>
      <entry><ind>0.0</ind><dep>0.0</dep></entry>
      <entry><ind>0.08</ind><dep>-72.0</dep></entry>
      <entry><ind>0.75</ind><dep>-70.0</dep></entry>
      <entry><ind>1.0</ind><dep>-70.0</dep></entry>
    </interpolation>
    <axis>
      <x1-m>6.332</x1-m>
      <y1-m>2.682</y1-m>
      <z1-m>-0.432</z1-m>
      <x2-m>8.254</x2-m>
      <y2-m>2.854</y2-m>
      <z2-m>-0.238</z2-m>
    </axis>
  </animation>

<!--
________________________________________________________________________________
                                                           SUSPENSION ANIMATIONS
  -->


<!-- nose Suspensions Compression -->
  <animation>
    <name>NoseGearAssy</name>
    <object-name>NoseWheel</object-name>
    <object-name>NoseLowerStrut</object-name>
    <object-name>NoseLowerStrut.001</object-name>
    <object-name>NoseLowerSpring2</object-name> 
  </animation>
  <animation>
    <type>translate</type>
    <object-name>NoseGearAssy</object-name>
    <property>sim/multiplay/generic/float[17]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.3</ind><dep>.1</dep></entry>
      <entry><ind>.6</ind><dep>.2</dep></entry>
      <entry><ind>1</ind><dep>.3</dep></entry>
    </interpolation>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>NoseUpperSpring2</object-name>
    <property>sim/multiplay/generic/float[17]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.3</ind><dep>15</dep></entry>
      <entry><ind>.6</ind><dep>25</dep></entry>
      <entry><ind>1</ind><dep>35</dep></entry>
    </interpolation>
    <center>
      <x-m>2.008</x-m>
      <y-m>0</y-m>
      <z-m>-1.126</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>NoseLowerSpring2</object-name>
    <property>sim/multiplay/generic/float[17]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.3</ind><dep>-15</dep></entry>
      <entry><ind>.6</ind><dep>-25</dep></entry>
      <entry><ind>1</ind><dep>-35</dep></entry>
    </interpolation>
    <center>
      <x-m>1.982</x-m>
      <y-m>0</y-m>
      <z-m>-1.639</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>

<!-- Suspensions Compression -->
  <animation>
    <name>PortGearAssy</name>
    <object-name>PortWheel</object-name>
    <object-name>PortLowerStrut</object-name>
    <object-name>PortLowerStrut.001</object-name>
    <object-name>PortLowerSpring</object-name> 
  </animation>
  <animation>
    <type>translate</type>
    <object-name>PortGearAssy</object-name>
    <property>sim/multiplay/generic/float[15]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.2</ind><dep>.07</dep></entry>
      <entry><ind>.3</ind><dep>.35</dep></entry>
      <entry><ind>1</ind><dep>.4</dep></entry>
    </interpolation>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>PortUpperSpring</object-name>
    <property>sim/multiplay/generic/float[15]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.15</ind><dep>8</dep></entry>
      <entry><ind>.22</ind><dep>15</dep></entry>
      <entry><ind>.3</ind><dep>38</dep></entry>
      <entry><ind>1</ind><dep>45</dep></entry>
    </interpolation>
    <center>
      <x-m>8.457</x-m>
      <y-m>0</y-m>
      <z-m>-0.522</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>PortLowerSpring</object-name>
    <property>sim/multiplay/generic/float[15]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.15</ind><dep>-8</dep></entry>
      <entry><ind>.22</ind><dep>-15</dep></entry>
      <entry><ind>.3</ind><dep>-38</dep></entry>
      <entry><ind>1</ind><dep>-40</dep></entry>
    </interpolation>
    <center>
      <x-m>8.47</x-m>
      <y-m>0</y-m>
      <z-m>-1.086</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>

  <animation>
    <name>StarGearAssy</name>
    <object-name>StarWheel</object-name>
    <object-name>StarLowerStrut</object-name>
    <object-name>StarLowerStrut.001</object-name>
    <object-name>StarLowerSpring</object-name> 
  </animation>
  <animation>
    <type>translate</type>
    <object-name>StarGearAssy</object-name>
    <property>sim/multiplay/generic/float[14]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.2</ind><dep>.07</dep></entry>
      <entry><ind>.3</ind><dep>.35</dep></entry>
      <entry><ind>1</ind><dep>.4</dep></entry>
    </interpolation>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarUpperSpring</object-name>
    <property>sim/multiplay/generic/float[14]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.15</ind><dep>8</dep></entry>
      <entry><ind>.22</ind><dep>15</dep></entry>
      <entry><ind>.3</ind><dep>38</dep></entry>
      <entry><ind>1</ind><dep>45</dep></entry>
    </interpolation>
    <center>
      <x-m>8.457</x-m>
      <y-m>0</y-m>
      <z-m>-0.522</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>rotate</type>
    <object-name>StarLowerSpring</object-name>
    <property>sim/multiplay/generic/float[14]</property>
    <interpolation>
      <entry><ind>0</ind><dep>0</dep></entry>
      <entry><ind>.15</ind><dep>-8</dep></entry>
      <entry><ind>.22</ind><dep>-15</dep></entry>
      <entry><ind>.3</ind><dep>-38</dep></entry>
      <entry><ind>1</ind><dep>-40</dep></entry>
    </interpolation>
    <center>
      <x-m>8.47</x-m>
      <y-m>0</y-m>
      <z-m>-1.086</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>


<!--
________________________________________________________________________________
                                                                WHEELS ROTATIONS
  -->
<!-- Rolling Wheels -->
  <animation>
    <type>spin</type>
   <object-name>NoseWheel</object-name>
    <property>sim/multiplay/generic/float[9]</property>
    <factor>40</factor>
    <center>
      <x-m>1.966</x-m>
      <y-m>0.000</y-m>
      <z-m>-2.031</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>-1</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>spin</type>
    <object-name>PortWheel</object-name>
    <property>sim/multiplay/generic/float[10]</property>
    <factor>-20</factor>
    <center>
      <x-m>8.212</x-m>
      <y-m>0</y-m>
      <z-m>-1.906</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>1</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>spin</type>
    <object-name>StarWheel</object-name>
    <property>sim/multiplay/generic/float[11]</property>
    <factor>-20</factor>
     <center>
      <x-m>8.212</x-m>
      <y-m>0</y-m>
      <z-m>-1.906</z-m>
    </center>
    <axis>
      <x>0</x>
      <y>1</y>
      <z>0</z>
    </axis>
  </animation>









<!-- light pack -->
  <model>
    <path>Aircraft/daVinci_B-26B/Models/Lights/LightPack.xml</path>
    <offsets>
      <x-m>0</x-m>
      <y-m>0</y-m>
      <z-m>0</z-m>
    </offsets>
  </model>

</PropertyList>





